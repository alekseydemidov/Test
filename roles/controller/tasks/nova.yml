---
- name: Nova DBs creation
  mysql_db:
        name: "{{ item }}"
        login_host: "{{ mysql.host }}"
        login_user: "{{ mysql.root_user }}"
        login_password: "{{ mysql.root_passwd }}"
        state: present
  with_items:
        - "{{nova.db_name}}"
        - "{{nova.db_api_name}}"
        - "{{nova.db_cell0_name}}"

- name: Nova Grant proper access
  mysql_user:
        name: "{{nova.db_user}}"
        password: "{{nova.db_passwd}}"
        host: "{{ item[0] }}"
        priv: "{{ item[1] }}.*:ALL"
        login_host: "{{ mysql.host }}"
        login_user: "{{ mysql.root_user }}"
        login_password: "{{ mysql.root_passwd }}"
        append_privs: yes
        state: present
  with_nested:
        - ["{{ mysql.host }}", "%"]
        - ["{{nova.db_name}}", "{{nova.db_api_name}}", "{{nova.db_cell0_name}}"]
  notify: Reload db privileges

- name: Nova user creation
  os_user:
        name: "{{nova.user}}"
        password: "{{nova.passwd}}"
        update_password: on_create
        description: Nova Service Account
        domain: default
        state: present
        wait: yes
  environment: "{{OS_ENVIROMENT}}"

- name: Add the admin role to the nova user and service project
  os_user_role:
        role: admin
        user: "{{nova.user}}"
        project: service
        state: present
        wait: yes
  environment: "{{OS_ENVIROMENT}}"

- name: Nova service entity creation
  os_keystone_service:
        name: nova
        service_type: compute
        description: OpenStack Compute
        state: present
        wait: yes
  environment: "{{OS_ENVIROMENT}}"

- name: Create the Compute service API endpoints
  os_keystone_endpoint:
        service: nova
        interface: "{{item}}"
        url: http://{{controller.private_fqdn}}:8774/v2.1
        region: RegionOne
        state: present
        wait: yes
  environment: "{{OS_ENVIROMENT}}"
  with_items: ['public', 'internal', 'admin']

- name: Placement user creation
  os_user:
        name: "{{nova.placement_user}}"
        password: "{{nova.placement_passwd}}"
        update_password: on_create
        description: Placement Service Account
        domain: default
        state: present
        wait: yes
  environment: "{{OS_ENVIROMENT}}"

- name: Add the admin role to the placement user and service project
  os_user_role:
        role: admin
        user: "{{nova.placement_user}}"
        project: service
        state: present
        wait: yes
  environment: "{{OS_ENVIROMENT}}"

- name: Placement service entity creation
  os_keystone_service:
        name: placement
        service_type: placement
        description: Placement API
        state: present
        wait: yes
  environment: "{{OS_ENVIROMENT}}"

- name: Create the Placement API endpoints
  os_keystone_endpoint:
        service: placement
        interface: "{{item}}"
        url: http://{{controller.private_fqdn}}:8778
        region: RegionOne
        state: present
        wait: yes
  environment: "{{OS_ENVIROMENT}}"
  with_items: ['public', 'internal', 'admin']

- name: Nova install packages
  yum:
      name: openstack-nova-api, openstack-nova-conductor, openstack-nova-console, openstack-nova-novncproxy, openstack-nova-scheduler, openstack-nova-placement-api
      state: present
  notify:
      - Nova-api DB sync
      - register cell0
      - register cell1
      - Nova DB sync 
      - restart openstack-nova

- name: Creation configuration directory
  file: path=/etc/nova/nova.conf.d state=directory owner=root group=nova mode=0750

- name: Copy content configuration
  template: src={{item}} dest=/etc/nova/nova.conf.d
  with_items: [nova.conf.d/DEFAULT, nova.conf.d/api, nova.conf.d/api_database, nova.conf.d/database, nova.conf.d/glance, nova.conf.d/keystone_authtoken, nova.conf.d/oslo_concurrency, nova.conf.d/placement, nova.conf.d/vnc]

- name: Nova configuration
  assemble: backup=yes src=/etc/nova/nova.conf.d/ dest=/etc/nova/nova.conf owner=root group=nova mode=0640
  notify: restart openstack-nova

- name: Enable access to the Placement API
  blockinfile: 
        block: | 
          <Directory /usr/bin>
            <IfVersion >= 2.4>
                Require all granted
            </IfVersion>
            <IfVersion < 2.4>
                Order allow,deny
                Allow from all
            </IfVersion>
          </Directory>
        dest: /etc/httpd/conf.d/00-nova-placement-api.conf
        marker: "# {mark} Enable access to the Placement API"
        state: present
        backup: yes 
  notify: restart httpd

- name: Force all notified handlers
  meta: flush_handlers

- name: Check Compute services are up and running
  service:
        name: "{{ item }}"
        enabled: yes
        state: started
  with_items:
        - openstack-nova-api.service
        - openstack-nova-consoleauth.service
        - openstack-nova-scheduler.service
        - openstack-nova-conductor.service
        - openstack-nova-novncproxy.service
